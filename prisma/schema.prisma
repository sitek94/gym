datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password?
  notes        Note[]
  exercises    Exercise[]
  exerciseSets ExerciseSet[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Exercise {
  id    String  @id @default(cuid())
  name  String
  notes String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  sets   ExerciseSet[]
}

model ExerciseSet {
  id     String  @id @default(cuid())
  notes  String?
  reps   Int
  weight Int

  date DateTime

  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  exerciseId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}
